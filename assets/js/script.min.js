$(document).ready(function () {
  $("[data-bs-hover-animate]")
    .mouseenter(function () {
      var e = $(this);
      e.addClass("animated " + e.attr("data-bs-hover-animate"));
    })
    .mouseleave(function () {
      var e = $(this);
      e.removeClass("animated " + e.attr("data-bs-hover-animate"));
    });
});
const fileSelector = document.getElementById("file-selector"),
  downloadMAL = document.getElementById("downloadMAL"),
  downloadDiv = document.getElementById("downloadDiv"),
  waiting = document.getElementById("waiting"),
  waiting1 = document.getElementById("waiting-1"),
  timer = document.getElementById("timer"),
  timeout = 2,
  errorTime = 0.2,
  today = new Date(),
  dd = String(today.getDate()).padStart(2, "0"),
  mm = String(today.getMonth() + 1).padStart(2, "0"),
  yyyy = today.getFullYear(),
  dateToday = yyyy + "-" + mm + "-" + dd,
  convertFile = async (e) => {
    const t = [
        ...e.match(/https:\/\/myanimelist\.[a-zA-Z0-9()]{1,3}\/.*/g),
      ].map((e) => e.split("/")[4]),
      a = await getAnimeInfo(t),
      n = `<my_start_date>${dateToday}</my_start_date><my_finish_date>${dateToday}</my_finish_date>`,
      i = [],
      o = [];
    for (let e = 0; e < t.length; e++) {
      const s = t[e],
        r = a[s].data,
        d = `<anime>${`<series_animedb_id>${s}</series_animedb_id>`}${`<my_watched_episodes>${r.episodes}</my_watched_episodes>`}${n}${`<my_score>${Math.round(
          r.score
        )}</my_score>`}<my_status>Completed</my_status><update_on_import>1</update_on_import></anime>`;
      i.push(d), void 0 === r && o.push(s);
    }
    const s = formatXml(
      `<?xml version='1.0' ?><myanimelist><myinfo><user_export_type>1</user_export_type></myinfo>${i.join(
        ""
      )}</myanimelist>`
    );
    returnFile(s),
      console.log("\nThe anime with the following ids were not found: " + o);
  },
  getFile = (e) => {
    const t = e.target.files[0],
      a = new FileReader();
    (a.onload = (e) => {
      const t = e.target.result;
      convertFile(t);
    }),
      (a.onerror = (e) => reject(e)),
      a.readAsText(t);
  },
  returnFile = (e) => {
    const t = document.createElement("a");
    t.setAttribute(
      "href",
      "data:application/xml;charset=utf-8," + encodeURIComponent(e)
    ),
      t.setAttribute("id", "downloadFile"),
      (t.download = "MAL"),
      (t.style.display = "none"),
      downloadMAL.appendChild(t),
      makeVisible(downloadDiv);
  },
  pleaseWait = (e) => {
    startTimer(2.2 * e.length, timer),
      waiting.classList.toggle("invisible"),
      waiting1.classList.toggle("invisible");
  },
  getInfo = async (e) => {
    const t = await fetch(`https://api.jikan.moe/v4/anime/${e}`),
      a = await t.json();
    return console.log(a.data.title), a;
  };
async function sleep(e) {
  return new Promise((t) => setTimeout(t, e));
}
const getAnimeInfo = async (e) => {
  pleaseWait(e);
  const t = {};
  for (let a = 0; a < e.length; a++) {
    const n = e[a];
    await sleep(2e3), (t[n] = await getInfo(n));
  }
  return t;
};
function startTimer(e, t) {
  var a,
    n,
    i = e;
  const o = setInterval(function () {
    (a = parseInt(i / 60, 10)),
      (n = parseInt(i % 60, 10)),
      (a = a < 10 ? "0" + a : a),
      (n = n < 10 ? "0" + n : n),
      (t.textContent = a + ":" + n),
      --i < 0 &&
        (clearInterval(o),
        waiting.classList.toggle("invisible"),
        waiting1.classList.toggle("invisible"));
  }, 1e3);
}
function formatXml(e) {
  var t = "";
  e = e.replace(/(>)(<)(\/*)/g, "$1\r\n$2$3");
  var a = 0;
  return (
    jQuery.each(e.split("\r\n"), function (e, n) {
      var i = 0;
      n.match(/.+<\/\w[^>]*>$/)
        ? (i = 0)
        : n.match(/^<\/\w/)
        ? 0 != a && (a -= 1)
        : (i = n.match(/^<\w[^>]*[^\/]>.*$/) ? 1 : 0);
      for (var o = "", s = 0; s < a; s++) o += "  ";
      (t += o + n + "\r\n"), (a += i);
    }),
    t
  );
}
function makeVisible(e) {
  e.classList.remove("invisible");
}
function startDownload(e) {
  document.getElementById("downloadFile").click();
}
fileSelector.addEventListener("change", getFile),
  downloadMAL.addEventListener("click", startDownload);
